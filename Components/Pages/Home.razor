@page "/"
@rendermode InteractiveServer
@layout Components.Layout.LoginLayout



<MudGrid Style="align-items:center">
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
           <MudTextField @bind-Value="username"></MudTextField>
            <MudTextField @bind-Value="password"></MudTextField>
            <MudButton @onclick="UserLogin">Login</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>



@code {
    private string username = "";
    private string password = "";
    List<users> xuser;

    private async Task UserLogin()
    {
        xuser = new List<users>();
        using (HttpClient client = new HttpClient())
        {
            client.BaseAddress = new Uri($"{Nav.BaseUri}");
            HttpResponseMessage json = await client.GetAsync($"api/User/Login?user={username}&pwd={password}");
            if (json.IsSuccessStatusCode)
            {
                string content = await json.Content.ReadAsStringAsync();
                List<users> code = JsonConvert.DeserializeObject<List<users>>(content);

                if (code.Count > 0)
                {
                    xuser.Add(new users()
                        {
                            userID = code[0].userID,
                            token = code[0].token,
                            name = code[0].name,
                            username = code[0].username,
                        });

                    await LocalStorage.SetItemAsStringAsync("token", xuser[0].token);
                    Nav.NavigateTo("/residents");
                }
                else
                {
                    SnackBar.Add($"Invalid Username or Password", Severity.Warning);
                }
            }
            else
            {
                SnackBar.Add($"Invalid Username or Password", Severity.Warning);
            }
        }
    }
}

